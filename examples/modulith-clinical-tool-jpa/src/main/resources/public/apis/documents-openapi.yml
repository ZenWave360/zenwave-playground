---
openapi: "3.0.1"
info:
  title: "Documents API"
  version: "0.0.1"
  description: "Documents API"
  contact:
    email: "email@domain.com"
servers:
- description: "localhost"
  url: "http://localhost:8080/api"
- description: "custom"
  url: "{protocol}://{server}/{path}"
  variables:
    protocol:
      enum:
      - "http"
      - "https"
      default: "http"
    server:
      default: "localhost:8080"
    path:
      default: "api"
tags:
- name: "Default"
- name: "Document"
paths:
  /documents/:
    get:
      operationId: "listDocumentInfo"
      description: "listDocumentInfo"
      tags:
      - "Document"
      parameters:
      - name: "documentIds"
        in: "query"
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentInfoList"
  /documents/{id}:
    get:
      operationId: "downloadDocument"
      description: "downloadDocument"
      tags:
      - "Document"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "preview"
        in: "query"
        schema:
          type: "boolean"
      responses:
        "200":
          description: "OK"
          headers:
            Content-Disposition:
              description: "Controls file download behavior. Values: 'inline' (display\
                \ in browser) or 'attachment; filename=example.pdf' (download file)"
              schema:
                type: "string"
          content:
            '*/*':
              schema:
                type: "string"
                format: "binary"
    delete:
      operationId: "deleteDocumentInfo"
      description: "deleteDocumentInfo"
      tags:
      - "Document"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "204":
          description: "OK"
  /documents/upload:
    post:
      operationId: "uploadDocument"
      description: "uploadDocument"
      tags:
      - "Document"
      parameters:
      - name: "uuid"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "tags"
        in: "query"
        required: false
        style: "form"
        explode: true
        schema:
          type: "array"
          items:
            type: "string"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              required:
              - "file"
              properties:
                file:
                  type: "string"
                  format: "binary"
      responses:
        "201":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentInfo"
components:
  schemas:
    DocumentInfo:
      type: "object"
      x-business-entity: "DocumentInfo"
      required:
      - "fileName"
      - "documentType"
      - "contentType"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        version:
          type: "integer"
          default: "null"
          description: "Version of the document (required in PUT for concurrency control,\
            \ should be null in POSTs)."
        uuid:
          type: "string"
        fileName:
          type: "string"
        documentType:
          type: "string"
        contentType:
          type: "string"
        tags:
          type: "array"
          items:
            type: "string"
        documentData:
          $ref: "#/components/schemas/DocumentData"
    DocumentInfoList:
      type: "array"
      items:
        $ref: "#/components/schemas/DocumentInfo"
    DocumentData:
      type: "object"
      x-business-entity: "DocumentData"
      required:
      - "data"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        version:
          type: "integer"
          default: "null"
          description: "Version of the document (required in PUT for concurrency control,\
            \ should be null in POSTs)."
        data:
          type: "string"
          format: "binary"
    Page:
      type: "object"
      required:
      - "content"
      - "totalElements"
      - "totalPages"
      - "size"
      - "number"
      properties:
        number:
          type: "integer"
          minimum: 0
        numberOfElements:
          type: "integer"
          minimum: 0
        size:
          type: "integer"
          minimum: 0
          maximum: 200
          multipleOf: 25
        totalElements:
          type: "integer"
        totalPages:
          type: "integer"
  parameters:
    page:
      name: "page"
      in: "query"
      description: "The number of results page"
      schema:
        type: "integer"
        format: "int32"
        default: 0
    limit:
      name: "limit"
      in: "query"
      description: "The number of results in a single page"
      schema:
        type: "integer"
        format: "int32"
        default: 20
    sort:
      name: "sort"
      in: "query"
      description: "Sort results by field name and direction (asc or desc)"
      schema:
        type: "array"
        items:
          type: "string"
  securitySchemes:
    basicAuth:
      type: "http"
      scheme: "basic"
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
security:
- basicAuth: []
- bearerAuth: []
