logging:
  level:
    root: INFO
    io.zenwave360.example: DEBUG
    org.apache.kafka.clients.admin: WARN

springdoc.swagger-ui.urls:
  - name: ZenWave Customer JPA Example
    url: /apis/openapi.yml

management:
  endpoints.web.exposure.include: "*"

spring:
  modulith.events.externalization.enabled: true
  modulith.events.jdbc.schema-initialization.enabled: true
  modulith.events.republish-outstanding-events-on-restart: true
  security:
    user:
      name: user
      password: password
  jpa:
    open-in-view: false
    hibernate.ddl-auto: none
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
  cloud:
    stream:
      kafka.binder.enable-observation: true
      function:
        definition: on-customer-event;
      bindings:
        on-customer-event-out-0:
          destination: customer.events
