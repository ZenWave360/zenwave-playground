config {
    title "AsyncAPI Example Provider"
    basePackage "io.example.asyncapi.provider"
    persistence jpa
    databaseType postgresql

    layout LayeredProjectLayout
}

/**
* Customer entity
*/
@aggregate
@auditing // adds auditing fields to the entity
entity Customer {
    name String required maxlength(254) /** Customer name */
    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/)
    /** Customer Addresses can be stored in a JSON column in the database. */
    @json addresses Address[] minlength(1) maxlength(5) {
        street String required maxlength(254)
        city String required maxlength(254)
    }
}

@auditing
entity PaymentMethod {
    type PaymentMethodType required
    cardNumber String required
}

enum PaymentMethodType { VISA(1), MASTERCARD(2) }

relationship OneToMany {
    @eager
    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}
}


@rest("/customers")
service CustomerService for (Customer) {
    @post
    createCustomer(Customer) Customer
    @get("/{id}")
    getCustomer(id) Customer?
    @put("/{id}")
    updateCustomer(id, Customer) Customer?
    @delete("/{id}")
    deleteCustomer(id)
    @get @paginated
    listCustomers() Customer[]
}
