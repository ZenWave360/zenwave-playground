asyncapi: 3.0.0
info:
  title: "ZenWave Customer JPA Example"
  version: 0.0.1
  tags:
    - name: "Default"
    - name: "Customer"

defaultContentType: application/json

channels:
  CustomersChannel:
    address: "customers"
    messages:
      CustomerDeletedEventMessage:
        $ref: '#/components/messages/CustomerDeletedEventMessage'
      CustomerEventMessage:
        $ref: '#/components/messages/CustomerEventMessage'

operations:
  onCustomerEvent:
    action: send
    tags:
      - name: Customer
    channel:
      $ref: '#/channels/CustomersChannel'
  onCustomerDeletedEvent:
    action: send
    tags:
      - name: Customer
    channel:
      $ref: '#/channels/CustomersChannel'


components:
  messages:
    CustomerEventMessage:
      name: CustomerEventMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/CustomerEvent"
    CustomerDeletedEventMessage:
      name: CustomerDeletedEventMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/CustomerDeletedEvent"

  messageTraits:
    CommonHeaders:
      headers:
        type: "object"
        properties:
          kafka_messageKey:
            type: "integer"
            description: This header value will be populated automatically at runtime
            x-runtime-expression: "$message.payload#/id"

  schemas:
    CustomerEvent:
      type: "object"
      x-business-entity: "CustomerEvent"
      required:
        - "name"
        - "email"
        - "id"
      properties:
        name:
          type: "string"
          description: "Customer name"
        email:
          type: "string"
        addresses:
          type: "array"
          items:
            $ref: "#/components/schemas/Address"
        id:
          type: "integer"
          format: "int64"
        version:
          type: "integer"
          format: "int32"
        paymentMethods:
          type: "array"
          items:
            $ref: "#/components/schemas/PaymentMethod"

    CustomerDeletedEvent:
      type: "object"
      x-business-entity: "CustomerDeletedEvent"
      required:
        - "id"
      properties:
        id:
          type: "integer"
          format: "int64"

    Address:
      type: object
      x-business-entity: "Address"
      required:
        - "street"
        - "city"
      properties:
        street:
          type: "string"
        city:
          type: "string"

    PaymentMethod:
      type: "object"
      x-business-entity: "PaymentMethod"
      required:
        - "type"
        - "cardNumber"
      properties:
        id:
          type: "integer"
          format: "int64"
        type:
          $ref: "#/components/schemas/PaymentMethodType"
        cardNumber:
          type: "string"

    PaymentMethodType:
      type: "string"
      x-business-entity: "PaymentMethodType"
      enum:
        - "VISA"
        - "MASTERCARD"
